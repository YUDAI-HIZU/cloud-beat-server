# GraphQL schema example
#
# https://gqlgen.com/getting-started/

scalar Time
scalar Upload

directive @authentication on FIELD_DEFINITION

type Genre {
  id: ID!
  name: String!
  createdAt: Time!
  updatedAt: Time!
}

type Playlist {
  id: ID!
  title: String!
  public: Boolean!
  userID: ID!
  user: User!
  tracks: [Track!]!
  createdAt: Time!
  updatedAt: Time!
}

type PlaylistSource {
  playlistID: ID!
  trackID: ID!
}

type Track {
  id: ID!
  title: String!
  thumbnailUrl: String
  soundUrl: String!
  userID: ID!
  user: User!
  genres: [Genre!]!
  createdAt: Time!
  updatedAt: Time!
}

type DeviceToken {
  id: ID!
  userID: ID!
  Token: String!
  createdAt: Time!
  updatedAt: Time!
}

type User {
  id: ID!
  uid: String!
  displayName: String!
  webUrl: String
  twitter: String
  soundCloud: String
  facebook: String
  youtube: String
  instagram: String
  introduction: String
  iconUrl: String
  coverUrl: String
  createdAt: Time!
  updatedAt: Time!
}

type Query {
  genres: [Genre!]!
  playlistsByUser(userID: ID!): [Playlist!]!
  playlistsByMe: [Playlist!]! @authentication
  track(id: ID!): Track!
  tracksByUser(userID: ID!): [Track!]!
  newReleaseTracks: [Track!]!
  pickUpTracks: [Track!]!
  user(id: ID!): User!
  me: User! @authentication
}

input CreatePlaylistInput {
  title: String!
  public: Boolean!
  trackIDs: [ID!]
}

input CreatePlaylistSourceInput {
  playlistID: ID!
  trackID: ID!
}

input CreateTrackInput {
  title: String!
  sound: Upload!
  thumbnail: Upload
}

input CreateUserInput {
  uid: String!
  displayName: String!
}

input UpdateTrackInput {
  title: String!
  sound: Upload
  thumbnail: Upload
}

input UpdateUserInput {
  icon: Upload
  cover: Upload
  displayName: String
  webUrl: String
  twitter: String
  soundCloud: String
  facebook: String
  youtube: String
  instagram: String
  introduction: String
}

input DeletePlaylistInput {
  id: ID!
}

input DeletePlaylistSourceInput {
  playlistID: ID!
  trackIDs: [ID!]!
}

type Mutation {
  createPlaylist(input: CreatePlaylistInput!): Playlist!
  createPlaylistSource(input: CreatePlaylistSourceInput!): PlaylistSource!
  createTrack(input: CreateTrackInput!): Track! @authentication
  createUser(input: CreateUserInput!): User!
  updateTrack(input: UpdateTrackInput!): Track! @authentication
  updateUser(input: UpdateUserInput!): User! @authentication
  deletePlaylist(input: DeletePlaylistInput!): Playlist!
  deletePlaylistSource(input: DeletePlaylistSourceInput!): [PlaylistSource!]!
}
